def call_img2img_api(server_url, input_image, prompt, output_file_name, mask_image=None, **kwargs):
    init_images = [encode_file_to_base64(input_image)]
    payload = {
        "prompt": prompt,
        "seed": kwargs.get("seed", 1),
        "steps": kwargs.get("steps", 20),
        "width": kwargs.get("width", 512),
        "height": kwargs.get("height", 512),
        "denoising_strength": kwargs.get("denoising_strength", 0.5),
        "n_iter": kwargs.get("n_iter", 1),
        "init_images": init_images,
        "batch_size": len(init_images),
        "resize_mode": 0
    }

    if mask_image:
        payload["mask"] = encode_file_to_base64(mask_image)
        payload["cfg_scale"] = 1.5
        payload["denoising_strength"] = 0.75
        payload["mask_blur_x"] = 4
        payload["mask_blur_y"] = 4
        payload["mask_blur"] = 4
        payload["mask_round"] = True
        payload["inpainting_mask_invert"] = 0
        payload["inpaint_full_res"] = 0
        payload["inpaint_full_res_padding"] = 32
        payload["initial_noise_multiplier"] = 1
        payload["inpainting_fill"] = kwargs.get("inpainting_mode", 0)
        





    response = call_api(server_url, 'sdapi/v1/img2img', **payload)
    for index, image in enumerate(response.get('images')):
        save_path = f"{output_file_name}.png"
        decode_and_save_base64(image, save_path)
