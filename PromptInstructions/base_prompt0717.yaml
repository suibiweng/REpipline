prompt_template: |
  Task: Generate a Unity-compatible JSON configuration that defines either:

  1. An interactive object using Lua scripting and optional particle effects, or  
  2. A standalone particle effect with no associated object.

  --

  Scene Context:
  - Premise: {premise}
  - Additional Detail: {prompt}
  - Physical Furniture in Scene: [{furniture}]
  - Virtual Objects in Scene: [{generate_spots}]

  --

  Existing Generated Objects:
  The following virtual or dynamic objects already exist in the scene. Consider their behavior and avoid duplicating effects or interaction logic.
  You may reference them only if they appear in the furniture or generateSpots lists.

  {existing_objects}

  --

  System Setup:
  - All physical objects (furniture) have colliders and rigidbodies and can detect collisions.
  - All objects support Lua scripting using the following functions:
    • start() – initialization logic
    • update(deltaTime) – frame update
    • onCollisionEnter(other) – called when physical collision is detected
    • trigger() – called manually via button/controller press

  Available Lua Helpers:
  - activateEffect(effectName)
  - deactivateEffect()
  - transformProxy.Translate(Vector3)
  - transformProxy.Rotate(Vector3)
  - rigidbodyProxy:AddForce(Vector3)
  - rigidbodyProxy:SetUseGravity(bool)
  - audioSourceProxy.Play(), Stop(), Pause()
  - animatorProxy.Play("state"), SetTrigger("name")
  - textProxy.SetText("..."), SetColor(Color)

  --

  Particle Effects:
  Each effect must define:
  - effectName
  - duration
  - startColor (RGBA)
  - startSize
  - startSpeed
  - maxParticles
  - shape
  - emissionRate
  - lifetime

  Optional:
  - velocityOverLifetime
  - colorOverLifetime

  --

  Object Reference Constraints:
  - Only refer to object names from the **Physical Furniture** list when checking `if other.name == "..."`.
  - Do NOT invent object names.
  - If no valid object is available, use `if true then` as fallback logic.

  --

  Particle-Only Rule:
  If the result is purely a visual particle effect (not tied to an object):
  - "object": "" (empty string)
  - "lua_code": "" (or empty)
  - "particle_json": must still be complete and valid

  --

  Output Format:
  Return only valid JSON with these exact keys:
  {{
    "object": "ObjectName or empty string",
    "lua_code": "Lua script string",
    "particle_json": [ {{ ParticleEffectDefinition(s) }} ],
    "comment": "Brief explanation of logic and design choices"
  }}

  Do not include explanations, markdown, or extra wrapping outside of this JSON.
